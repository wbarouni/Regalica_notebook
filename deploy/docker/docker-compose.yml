version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: regalica
      POSTGRES_USER: regalica
      POSTGRES_PASSWORD: regalica
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U regalica -d regalica"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT_BACKEND=8080
      - CORS_ORIGIN=http://localhost:4200
      - PGHOST=postgres
      - PGPORT=5432
      - PGDATABASE=regalica
      - PGUSER=regalica
      - PGPASSWORD=regalica
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - DEFAULT_LLM=qwen2:7b-instruct
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:4200/"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  ollama_data:
