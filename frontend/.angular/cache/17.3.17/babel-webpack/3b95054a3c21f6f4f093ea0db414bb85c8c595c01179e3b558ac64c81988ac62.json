{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let UploadDropzoneComponent = /*#__PURE__*/(() => {\n  class UploadDropzoneComponent {\n    constructor() {\n      this.uploadComplete = new EventEmitter();\n      this.uploadError = new EventEmitter();\n    }\n    onDragOver(event) {\n      event.preventDefault();\n    }\n    onDragLeave(event) {\n      event.preventDefault();\n    }\n    onDrop(event) {\n      event.preventDefault();\n      const files = event.dataTransfer?.files;\n      if (files) {\n        this.handleFiles(files);\n      }\n    }\n    onFileSelect(event) {\n      const files = event.target.files;\n      if (files) {\n        this.handleFiles(files);\n      }\n    }\n    handleFiles(files) {\n      // Simulation d'upload pour le moment\n      console.log('Files selected:', files);\n      this.uploadComplete.emit({\n        message: 'Upload completed'\n      });\n    }\n    static {\n      this.ɵfac = function UploadDropzoneComponent_Factory(t) {\n        return new (t || UploadDropzoneComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UploadDropzoneComponent,\n        selectors: [[\"app-upload-dropzone\"]],\n        outputs: {\n          uploadComplete: \"uploadComplete\",\n          uploadError: \"uploadError\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 10,\n        vars: 0,\n        consts: [[\"fileInput\", \"\"], [1, \"upload-dropzone\", 3, \"dragover\", \"dragleave\", \"drop\"], [1, \"upload-content\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-8\", \"h-8\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"], [1, \"upload-text\"], [\"type\", \"file\", \"multiple\", \"\", \"accept\", \".pdf,.docx,.txt,.html\", 1, \"file-input\", 3, \"change\"], [1, \"upload-btn\", 3, \"click\"]],\n        template: function UploadDropzoneComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵlistener(\"dragover\", function UploadDropzoneComponent_Template_div_dragover_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onDragOver($event));\n            })(\"dragleave\", function UploadDropzoneComponent_Template_div_dragleave_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onDragLeave($event));\n            })(\"drop\", function UploadDropzoneComponent_Template_div_drop_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onDrop($event));\n            });\n            i0.ɵɵelementStart(1, \"div\", 2);\n            i0.ɵɵnamespaceSVG();\n            i0.ɵɵelementStart(2, \"svg\", 3);\n            i0.ɵɵelement(3, \"path\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵnamespaceHTML();\n            i0.ɵɵelementStart(4, \"p\", 5);\n            i0.ɵɵtext(5, \"Drop files here or click to upload\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"input\", 6, 0);\n            i0.ɵɵlistener(\"change\", function UploadDropzoneComponent_Template_input_change_6_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onFileSelect($event));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"button\", 7);\n            i0.ɵɵlistener(\"click\", function UploadDropzoneComponent_Template_button_click_8_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const fileInput_r2 = i0.ɵɵreference(7);\n              return i0.ɵɵresetView(fileInput_r2.click());\n            });\n            i0.ɵɵtext(9, \" Choose Files \");\n            i0.ɵɵelementEnd()()();\n          }\n        },\n        dependencies: [CommonModule],\n        styles: [\".upload-dropzone[_ngcontent-%COMP%]{border:2px dashed #d1d5db;border-radius:.5rem;padding:2rem;text-align:center;transition:all .2s;cursor:pointer}.upload-dropzone[_ngcontent-%COMP%]:hover{border-color:#9ca3af;background-color:#f9fafb}.upload-content[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin:0 auto 1rem;color:#6b7280}.upload-text[_ngcontent-%COMP%]{margin:0 0 1rem;color:#6b7280;font-size:.875rem}.file-input[_ngcontent-%COMP%]{display:none}.upload-btn[_ngcontent-%COMP%]{background:#111827;color:#fff;border:none;padding:.5rem 1rem;border-radius:.375rem;font-size:.875rem;cursor:pointer;transition:background-color .2s}.upload-btn[_ngcontent-%COMP%]:hover{background:#374151}\"]\n      });\n    }\n  }\n  return UploadDropzoneComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}