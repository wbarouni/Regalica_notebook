{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let IngestService = /*#__PURE__*/(() => {\n  class IngestService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = `${environment.apiBaseUrl}/ingest`;\n    }\n    uploadDocument(file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      return this.http.post(`${this.apiUrl}/upload`, formData);\n    }\n    getDocumentChunks(docId, page = 1, pageSize = environment.pageSize) {\n      const params = new HttpParams().set('page', page.toString()).set('pageSize', pageSize.toString());\n      return this.http.get(`${this.apiUrl}/${docId}/chunks`, {\n        params\n      });\n    }\n    /**\n     * Obtient la liste des documents avec pagination et filtres\n     */\n    getDocuments(params = {}) {\n      return this.http.get(`${this.apiUrl}/documents`, {\n        params: params\n      });\n    }\n    /**\n     * Obtient le contenu d'un document\n     */\n    getDocumentContent(documentId) {\n      return this.http.get(`${this.apiUrl}/documents/${documentId}/content`);\n    }\n    /**\n     * Supprime un document\n     */\n    deleteDocument(documentId) {\n      return this.http.delete(`${this.apiUrl}/documents/${documentId}`);\n    }\n    /**\n     * Retraite un document en erreur\n     */\n    retryDocument(documentId) {\n      return this.http.post(`${this.apiUrl}/documents/${documentId}/retry`, {});\n    }\n    /**\n     * Obtient les statistiques d'ingestion\n     */\n    getStats() {\n      return this.http.get(`${this.apiUrl}/stats`);\n    }\n    static {\n      this.ɵfac = function IngestService_Factory(t) {\n        return new (t || IngestService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: IngestService,\n        factory: IngestService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return IngestService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}